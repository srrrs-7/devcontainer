
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `UserClientRole` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/client"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model UserClientRole
 * 
 */
export type UserClientRoleModel = runtime.Types.Result.DefaultSelection<Prisma.$UserClientRolePayload>

export type AggregateUserClientRole = {
  _count: UserClientRoleCountAggregateOutputType | null
  _min: UserClientRoleMinAggregateOutputType | null
  _max: UserClientRoleMaxAggregateOutputType | null
}

export type UserClientRoleMinAggregateOutputType = {
  userClientRoleId: string | null
  userId: string | null
  clientId: string | null
  roleId: string | null
  assignedByUserId: string | null
  assignedAt: Date | null
}

export type UserClientRoleMaxAggregateOutputType = {
  userClientRoleId: string | null
  userId: string | null
  clientId: string | null
  roleId: string | null
  assignedByUserId: string | null
  assignedAt: Date | null
}

export type UserClientRoleCountAggregateOutputType = {
  userClientRoleId: number
  userId: number
  clientId: number
  roleId: number
  assignedByUserId: number
  assignedAt: number
  _all: number
}


export type UserClientRoleMinAggregateInputType = {
  userClientRoleId?: true
  userId?: true
  clientId?: true
  roleId?: true
  assignedByUserId?: true
  assignedAt?: true
}

export type UserClientRoleMaxAggregateInputType = {
  userClientRoleId?: true
  userId?: true
  clientId?: true
  roleId?: true
  assignedByUserId?: true
  assignedAt?: true
}

export type UserClientRoleCountAggregateInputType = {
  userClientRoleId?: true
  userId?: true
  clientId?: true
  roleId?: true
  assignedByUserId?: true
  assignedAt?: true
  _all?: true
}

export type UserClientRoleAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which UserClientRole to aggregate.
   */
  where?: Prisma.UserClientRoleWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of UserClientRoles to fetch.
   */
  orderBy?: Prisma.UserClientRoleOrderByWithRelationInput | Prisma.UserClientRoleOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.UserClientRoleWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` UserClientRoles from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` UserClientRoles.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned UserClientRoles
  **/
  _count?: true | UserClientRoleCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: UserClientRoleMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: UserClientRoleMaxAggregateInputType
}

export type GetUserClientRoleAggregateType<T extends UserClientRoleAggregateArgs> = {
      [P in keyof T & keyof AggregateUserClientRole]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateUserClientRole[P]>
    : Prisma.GetScalarType<T[P], AggregateUserClientRole[P]>
}




export type UserClientRoleGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.UserClientRoleWhereInput
  orderBy?: Prisma.UserClientRoleOrderByWithAggregationInput | Prisma.UserClientRoleOrderByWithAggregationInput[]
  by: Prisma.UserClientRoleScalarFieldEnum[] | Prisma.UserClientRoleScalarFieldEnum
  having?: Prisma.UserClientRoleScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: UserClientRoleCountAggregateInputType | true
  _min?: UserClientRoleMinAggregateInputType
  _max?: UserClientRoleMaxAggregateInputType
}

export type UserClientRoleGroupByOutputType = {
  userClientRoleId: string
  userId: string
  clientId: string
  roleId: string
  assignedByUserId: string | null
  assignedAt: Date
  _count: UserClientRoleCountAggregateOutputType | null
  _min: UserClientRoleMinAggregateOutputType | null
  _max: UserClientRoleMaxAggregateOutputType | null
}

type GetUserClientRoleGroupByPayload<T extends UserClientRoleGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<UserClientRoleGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof UserClientRoleGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], UserClientRoleGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], UserClientRoleGroupByOutputType[P]>
      }
    >
  >



export type UserClientRoleWhereInput = {
  AND?: Prisma.UserClientRoleWhereInput | Prisma.UserClientRoleWhereInput[]
  OR?: Prisma.UserClientRoleWhereInput[]
  NOT?: Prisma.UserClientRoleWhereInput | Prisma.UserClientRoleWhereInput[]
  userClientRoleId?: Prisma.UuidFilter<"UserClientRole"> | string
  userId?: Prisma.UuidFilter<"UserClientRole"> | string
  clientId?: Prisma.UuidFilter<"UserClientRole"> | string
  roleId?: Prisma.UuidFilter<"UserClientRole"> | string
  assignedByUserId?: Prisma.UuidNullableFilter<"UserClientRole"> | string | null
  assignedAt?: Prisma.DateTimeFilter<"UserClientRole"> | Date | string
  user?: Prisma.XOR<Prisma.UserScalarRelationFilter, Prisma.UserWhereInput>
  client?: Prisma.XOR<Prisma.ClientScalarRelationFilter, Prisma.ClientWhereInput>
  role?: Prisma.XOR<Prisma.RoleScalarRelationFilter, Prisma.RoleWhereInput>
  assignedByUser?: Prisma.XOR<Prisma.UserNullableScalarRelationFilter, Prisma.UserWhereInput> | null
}

export type UserClientRoleOrderByWithRelationInput = {
  userClientRoleId?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  clientId?: Prisma.SortOrder
  roleId?: Prisma.SortOrder
  assignedByUserId?: Prisma.SortOrderInput | Prisma.SortOrder
  assignedAt?: Prisma.SortOrder
  user?: Prisma.UserOrderByWithRelationInput
  client?: Prisma.ClientOrderByWithRelationInput
  role?: Prisma.RoleOrderByWithRelationInput
  assignedByUser?: Prisma.UserOrderByWithRelationInput
}

export type UserClientRoleWhereUniqueInput = Prisma.AtLeast<{
  userClientRoleId?: string
  userId_clientId_roleId?: Prisma.UserClientRoleUserIdClientIdRoleIdCompoundUniqueInput
  AND?: Prisma.UserClientRoleWhereInput | Prisma.UserClientRoleWhereInput[]
  OR?: Prisma.UserClientRoleWhereInput[]
  NOT?: Prisma.UserClientRoleWhereInput | Prisma.UserClientRoleWhereInput[]
  userId?: Prisma.UuidFilter<"UserClientRole"> | string
  clientId?: Prisma.UuidFilter<"UserClientRole"> | string
  roleId?: Prisma.UuidFilter<"UserClientRole"> | string
  assignedByUserId?: Prisma.UuidNullableFilter<"UserClientRole"> | string | null
  assignedAt?: Prisma.DateTimeFilter<"UserClientRole"> | Date | string
  user?: Prisma.XOR<Prisma.UserScalarRelationFilter, Prisma.UserWhereInput>
  client?: Prisma.XOR<Prisma.ClientScalarRelationFilter, Prisma.ClientWhereInput>
  role?: Prisma.XOR<Prisma.RoleScalarRelationFilter, Prisma.RoleWhereInput>
  assignedByUser?: Prisma.XOR<Prisma.UserNullableScalarRelationFilter, Prisma.UserWhereInput> | null
}, "userClientRoleId" | "userId_clientId_roleId">

export type UserClientRoleOrderByWithAggregationInput = {
  userClientRoleId?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  clientId?: Prisma.SortOrder
  roleId?: Prisma.SortOrder
  assignedByUserId?: Prisma.SortOrderInput | Prisma.SortOrder
  assignedAt?: Prisma.SortOrder
  _count?: Prisma.UserClientRoleCountOrderByAggregateInput
  _max?: Prisma.UserClientRoleMaxOrderByAggregateInput
  _min?: Prisma.UserClientRoleMinOrderByAggregateInput
}

export type UserClientRoleScalarWhereWithAggregatesInput = {
  AND?: Prisma.UserClientRoleScalarWhereWithAggregatesInput | Prisma.UserClientRoleScalarWhereWithAggregatesInput[]
  OR?: Prisma.UserClientRoleScalarWhereWithAggregatesInput[]
  NOT?: Prisma.UserClientRoleScalarWhereWithAggregatesInput | Prisma.UserClientRoleScalarWhereWithAggregatesInput[]
  userClientRoleId?: Prisma.UuidWithAggregatesFilter<"UserClientRole"> | string
  userId?: Prisma.UuidWithAggregatesFilter<"UserClientRole"> | string
  clientId?: Prisma.UuidWithAggregatesFilter<"UserClientRole"> | string
  roleId?: Prisma.UuidWithAggregatesFilter<"UserClientRole"> | string
  assignedByUserId?: Prisma.UuidNullableWithAggregatesFilter<"UserClientRole"> | string | null
  assignedAt?: Prisma.DateTimeWithAggregatesFilter<"UserClientRole"> | Date | string
}

export type UserClientRoleCreateInput = {
  userClientRoleId?: string
  assignedAt?: Date | string
  user: Prisma.UserCreateNestedOneWithoutUserClientRolesInput
  client: Prisma.ClientCreateNestedOneWithoutUserClientRolesInput
  role: Prisma.RoleCreateNestedOneWithoutUserClientRolesInput
  assignedByUser?: Prisma.UserCreateNestedOneWithoutAssignedUserClientRolesInput
}

export type UserClientRoleUncheckedCreateInput = {
  userClientRoleId?: string
  userId: string
  clientId: string
  roleId: string
  assignedByUserId?: string | null
  assignedAt?: Date | string
}

export type UserClientRoleUpdateInput = {
  userClientRoleId?: Prisma.StringFieldUpdateOperationsInput | string
  assignedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  user?: Prisma.UserUpdateOneRequiredWithoutUserClientRolesNestedInput
  client?: Prisma.ClientUpdateOneRequiredWithoutUserClientRolesNestedInput
  role?: Prisma.RoleUpdateOneRequiredWithoutUserClientRolesNestedInput
  assignedByUser?: Prisma.UserUpdateOneWithoutAssignedUserClientRolesNestedInput
}

export type UserClientRoleUncheckedUpdateInput = {
  userClientRoleId?: Prisma.StringFieldUpdateOperationsInput | string
  userId?: Prisma.StringFieldUpdateOperationsInput | string
  clientId?: Prisma.StringFieldUpdateOperationsInput | string
  roleId?: Prisma.StringFieldUpdateOperationsInput | string
  assignedByUserId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  assignedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type UserClientRoleCreateManyInput = {
  userClientRoleId?: string
  userId: string
  clientId: string
  roleId: string
  assignedByUserId?: string | null
  assignedAt?: Date | string
}

export type UserClientRoleUpdateManyMutationInput = {
  userClientRoleId?: Prisma.StringFieldUpdateOperationsInput | string
  assignedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type UserClientRoleUncheckedUpdateManyInput = {
  userClientRoleId?: Prisma.StringFieldUpdateOperationsInput | string
  userId?: Prisma.StringFieldUpdateOperationsInput | string
  clientId?: Prisma.StringFieldUpdateOperationsInput | string
  roleId?: Prisma.StringFieldUpdateOperationsInput | string
  assignedByUserId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  assignedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type UserClientRoleListRelationFilter = {
  every?: Prisma.UserClientRoleWhereInput
  some?: Prisma.UserClientRoleWhereInput
  none?: Prisma.UserClientRoleWhereInput
}

export type UserClientRoleOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type UserClientRoleUserIdClientIdRoleIdCompoundUniqueInput = {
  userId: string
  clientId: string
  roleId: string
}

export type UserClientRoleCountOrderByAggregateInput = {
  userClientRoleId?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  clientId?: Prisma.SortOrder
  roleId?: Prisma.SortOrder
  assignedByUserId?: Prisma.SortOrder
  assignedAt?: Prisma.SortOrder
}

export type UserClientRoleMaxOrderByAggregateInput = {
  userClientRoleId?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  clientId?: Prisma.SortOrder
  roleId?: Prisma.SortOrder
  assignedByUserId?: Prisma.SortOrder
  assignedAt?: Prisma.SortOrder
}

export type UserClientRoleMinOrderByAggregateInput = {
  userClientRoleId?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  clientId?: Prisma.SortOrder
  roleId?: Prisma.SortOrder
  assignedByUserId?: Prisma.SortOrder
  assignedAt?: Prisma.SortOrder
}

export type UserClientRoleCreateNestedManyWithoutClientInput = {
  create?: Prisma.XOR<Prisma.UserClientRoleCreateWithoutClientInput, Prisma.UserClientRoleUncheckedCreateWithoutClientInput> | Prisma.UserClientRoleCreateWithoutClientInput[] | Prisma.UserClientRoleUncheckedCreateWithoutClientInput[]
  connectOrCreate?: Prisma.UserClientRoleCreateOrConnectWithoutClientInput | Prisma.UserClientRoleCreateOrConnectWithoutClientInput[]
  createMany?: Prisma.UserClientRoleCreateManyClientInputEnvelope
  connect?: Prisma.UserClientRoleWhereUniqueInput | Prisma.UserClientRoleWhereUniqueInput[]
}

export type UserClientRoleUncheckedCreateNestedManyWithoutClientInput = {
  create?: Prisma.XOR<Prisma.UserClientRoleCreateWithoutClientInput, Prisma.UserClientRoleUncheckedCreateWithoutClientInput> | Prisma.UserClientRoleCreateWithoutClientInput[] | Prisma.UserClientRoleUncheckedCreateWithoutClientInput[]
  connectOrCreate?: Prisma.UserClientRoleCreateOrConnectWithoutClientInput | Prisma.UserClientRoleCreateOrConnectWithoutClientInput[]
  createMany?: Prisma.UserClientRoleCreateManyClientInputEnvelope
  connect?: Prisma.UserClientRoleWhereUniqueInput | Prisma.UserClientRoleWhereUniqueInput[]
}

export type UserClientRoleUpdateManyWithoutClientNestedInput = {
  create?: Prisma.XOR<Prisma.UserClientRoleCreateWithoutClientInput, Prisma.UserClientRoleUncheckedCreateWithoutClientInput> | Prisma.UserClientRoleCreateWithoutClientInput[] | Prisma.UserClientRoleUncheckedCreateWithoutClientInput[]
  connectOrCreate?: Prisma.UserClientRoleCreateOrConnectWithoutClientInput | Prisma.UserClientRoleCreateOrConnectWithoutClientInput[]
  upsert?: Prisma.UserClientRoleUpsertWithWhereUniqueWithoutClientInput | Prisma.UserClientRoleUpsertWithWhereUniqueWithoutClientInput[]
  createMany?: Prisma.UserClientRoleCreateManyClientInputEnvelope
  set?: Prisma.UserClientRoleWhereUniqueInput | Prisma.UserClientRoleWhereUniqueInput[]
  disconnect?: Prisma.UserClientRoleWhereUniqueInput | Prisma.UserClientRoleWhereUniqueInput[]
  delete?: Prisma.UserClientRoleWhereUniqueInput | Prisma.UserClientRoleWhereUniqueInput[]
  connect?: Prisma.UserClientRoleWhereUniqueInput | Prisma.UserClientRoleWhereUniqueInput[]
  update?: Prisma.UserClientRoleUpdateWithWhereUniqueWithoutClientInput | Prisma.UserClientRoleUpdateWithWhereUniqueWithoutClientInput[]
  updateMany?: Prisma.UserClientRoleUpdateManyWithWhereWithoutClientInput | Prisma.UserClientRoleUpdateManyWithWhereWithoutClientInput[]
  deleteMany?: Prisma.UserClientRoleScalarWhereInput | Prisma.UserClientRoleScalarWhereInput[]
}

export type UserClientRoleUncheckedUpdateManyWithoutClientNestedInput = {
  create?: Prisma.XOR<Prisma.UserClientRoleCreateWithoutClientInput, Prisma.UserClientRoleUncheckedCreateWithoutClientInput> | Prisma.UserClientRoleCreateWithoutClientInput[] | Prisma.UserClientRoleUncheckedCreateWithoutClientInput[]
  connectOrCreate?: Prisma.UserClientRoleCreateOrConnectWithoutClientInput | Prisma.UserClientRoleCreateOrConnectWithoutClientInput[]
  upsert?: Prisma.UserClientRoleUpsertWithWhereUniqueWithoutClientInput | Prisma.UserClientRoleUpsertWithWhereUniqueWithoutClientInput[]
  createMany?: Prisma.UserClientRoleCreateManyClientInputEnvelope
  set?: Prisma.UserClientRoleWhereUniqueInput | Prisma.UserClientRoleWhereUniqueInput[]
  disconnect?: Prisma.UserClientRoleWhereUniqueInput | Prisma.UserClientRoleWhereUniqueInput[]
  delete?: Prisma.UserClientRoleWhereUniqueInput | Prisma.UserClientRoleWhereUniqueInput[]
  connect?: Prisma.UserClientRoleWhereUniqueInput | Prisma.UserClientRoleWhereUniqueInput[]
  update?: Prisma.UserClientRoleUpdateWithWhereUniqueWithoutClientInput | Prisma.UserClientRoleUpdateWithWhereUniqueWithoutClientInput[]
  updateMany?: Prisma.UserClientRoleUpdateManyWithWhereWithoutClientInput | Prisma.UserClientRoleUpdateManyWithWhereWithoutClientInput[]
  deleteMany?: Prisma.UserClientRoleScalarWhereInput | Prisma.UserClientRoleScalarWhereInput[]
}

export type UserClientRoleCreateNestedManyWithoutUserInput = {
  create?: Prisma.XOR<Prisma.UserClientRoleCreateWithoutUserInput, Prisma.UserClientRoleUncheckedCreateWithoutUserInput> | Prisma.UserClientRoleCreateWithoutUserInput[] | Prisma.UserClientRoleUncheckedCreateWithoutUserInput[]
  connectOrCreate?: Prisma.UserClientRoleCreateOrConnectWithoutUserInput | Prisma.UserClientRoleCreateOrConnectWithoutUserInput[]
  createMany?: Prisma.UserClientRoleCreateManyUserInputEnvelope
  connect?: Prisma.UserClientRoleWhereUniqueInput | Prisma.UserClientRoleWhereUniqueInput[]
}

export type UserClientRoleCreateNestedManyWithoutAssignedByUserInput = {
  create?: Prisma.XOR<Prisma.UserClientRoleCreateWithoutAssignedByUserInput, Prisma.UserClientRoleUncheckedCreateWithoutAssignedByUserInput> | Prisma.UserClientRoleCreateWithoutAssignedByUserInput[] | Prisma.UserClientRoleUncheckedCreateWithoutAssignedByUserInput[]
  connectOrCreate?: Prisma.UserClientRoleCreateOrConnectWithoutAssignedByUserInput | Prisma.UserClientRoleCreateOrConnectWithoutAssignedByUserInput[]
  createMany?: Prisma.UserClientRoleCreateManyAssignedByUserInputEnvelope
  connect?: Prisma.UserClientRoleWhereUniqueInput | Prisma.UserClientRoleWhereUniqueInput[]
}

export type UserClientRoleUncheckedCreateNestedManyWithoutUserInput = {
  create?: Prisma.XOR<Prisma.UserClientRoleCreateWithoutUserInput, Prisma.UserClientRoleUncheckedCreateWithoutUserInput> | Prisma.UserClientRoleCreateWithoutUserInput[] | Prisma.UserClientRoleUncheckedCreateWithoutUserInput[]
  connectOrCreate?: Prisma.UserClientRoleCreateOrConnectWithoutUserInput | Prisma.UserClientRoleCreateOrConnectWithoutUserInput[]
  createMany?: Prisma.UserClientRoleCreateManyUserInputEnvelope
  connect?: Prisma.UserClientRoleWhereUniqueInput | Prisma.UserClientRoleWhereUniqueInput[]
}

export type UserClientRoleUncheckedCreateNestedManyWithoutAssignedByUserInput = {
  create?: Prisma.XOR<Prisma.UserClientRoleCreateWithoutAssignedByUserInput, Prisma.UserClientRoleUncheckedCreateWithoutAssignedByUserInput> | Prisma.UserClientRoleCreateWithoutAssignedByUserInput[] | Prisma.UserClientRoleUncheckedCreateWithoutAssignedByUserInput[]
  connectOrCreate?: Prisma.UserClientRoleCreateOrConnectWithoutAssignedByUserInput | Prisma.UserClientRoleCreateOrConnectWithoutAssignedByUserInput[]
  createMany?: Prisma.UserClientRoleCreateManyAssignedByUserInputEnvelope
  connect?: Prisma.UserClientRoleWhereUniqueInput | Prisma.UserClientRoleWhereUniqueInput[]
}

export type UserClientRoleUpdateManyWithoutUserNestedInput = {
  create?: Prisma.XOR<Prisma.UserClientRoleCreateWithoutUserInput, Prisma.UserClientRoleUncheckedCreateWithoutUserInput> | Prisma.UserClientRoleCreateWithoutUserInput[] | Prisma.UserClientRoleUncheckedCreateWithoutUserInput[]
  connectOrCreate?: Prisma.UserClientRoleCreateOrConnectWithoutUserInput | Prisma.UserClientRoleCreateOrConnectWithoutUserInput[]
  upsert?: Prisma.UserClientRoleUpsertWithWhereUniqueWithoutUserInput | Prisma.UserClientRoleUpsertWithWhereUniqueWithoutUserInput[]
  createMany?: Prisma.UserClientRoleCreateManyUserInputEnvelope
  set?: Prisma.UserClientRoleWhereUniqueInput | Prisma.UserClientRoleWhereUniqueInput[]
  disconnect?: Prisma.UserClientRoleWhereUniqueInput | Prisma.UserClientRoleWhereUniqueInput[]
  delete?: Prisma.UserClientRoleWhereUniqueInput | Prisma.UserClientRoleWhereUniqueInput[]
  connect?: Prisma.UserClientRoleWhereUniqueInput | Prisma.UserClientRoleWhereUniqueInput[]
  update?: Prisma.UserClientRoleUpdateWithWhereUniqueWithoutUserInput | Prisma.UserClientRoleUpdateWithWhereUniqueWithoutUserInput[]
  updateMany?: Prisma.UserClientRoleUpdateManyWithWhereWithoutUserInput | Prisma.UserClientRoleUpdateManyWithWhereWithoutUserInput[]
  deleteMany?: Prisma.UserClientRoleScalarWhereInput | Prisma.UserClientRoleScalarWhereInput[]
}

export type UserClientRoleUpdateManyWithoutAssignedByUserNestedInput = {
  create?: Prisma.XOR<Prisma.UserClientRoleCreateWithoutAssignedByUserInput, Prisma.UserClientRoleUncheckedCreateWithoutAssignedByUserInput> | Prisma.UserClientRoleCreateWithoutAssignedByUserInput[] | Prisma.UserClientRoleUncheckedCreateWithoutAssignedByUserInput[]
  connectOrCreate?: Prisma.UserClientRoleCreateOrConnectWithoutAssignedByUserInput | Prisma.UserClientRoleCreateOrConnectWithoutAssignedByUserInput[]
  upsert?: Prisma.UserClientRoleUpsertWithWhereUniqueWithoutAssignedByUserInput | Prisma.UserClientRoleUpsertWithWhereUniqueWithoutAssignedByUserInput[]
  createMany?: Prisma.UserClientRoleCreateManyAssignedByUserInputEnvelope
  set?: Prisma.UserClientRoleWhereUniqueInput | Prisma.UserClientRoleWhereUniqueInput[]
  disconnect?: Prisma.UserClientRoleWhereUniqueInput | Prisma.UserClientRoleWhereUniqueInput[]
  delete?: Prisma.UserClientRoleWhereUniqueInput | Prisma.UserClientRoleWhereUniqueInput[]
  connect?: Prisma.UserClientRoleWhereUniqueInput | Prisma.UserClientRoleWhereUniqueInput[]
  update?: Prisma.UserClientRoleUpdateWithWhereUniqueWithoutAssignedByUserInput | Prisma.UserClientRoleUpdateWithWhereUniqueWithoutAssignedByUserInput[]
  updateMany?: Prisma.UserClientRoleUpdateManyWithWhereWithoutAssignedByUserInput | Prisma.UserClientRoleUpdateManyWithWhereWithoutAssignedByUserInput[]
  deleteMany?: Prisma.UserClientRoleScalarWhereInput | Prisma.UserClientRoleScalarWhereInput[]
}

export type UserClientRoleUncheckedUpdateManyWithoutUserNestedInput = {
  create?: Prisma.XOR<Prisma.UserClientRoleCreateWithoutUserInput, Prisma.UserClientRoleUncheckedCreateWithoutUserInput> | Prisma.UserClientRoleCreateWithoutUserInput[] | Prisma.UserClientRoleUncheckedCreateWithoutUserInput[]
  connectOrCreate?: Prisma.UserClientRoleCreateOrConnectWithoutUserInput | Prisma.UserClientRoleCreateOrConnectWithoutUserInput[]
  upsert?: Prisma.UserClientRoleUpsertWithWhereUniqueWithoutUserInput | Prisma.UserClientRoleUpsertWithWhereUniqueWithoutUserInput[]
  createMany?: Prisma.UserClientRoleCreateManyUserInputEnvelope
  set?: Prisma.UserClientRoleWhereUniqueInput | Prisma.UserClientRoleWhereUniqueInput[]
  disconnect?: Prisma.UserClientRoleWhereUniqueInput | Prisma.UserClientRoleWhereUniqueInput[]
  delete?: Prisma.UserClientRoleWhereUniqueInput | Prisma.UserClientRoleWhereUniqueInput[]
  connect?: Prisma.UserClientRoleWhereUniqueInput | Prisma.UserClientRoleWhereUniqueInput[]
  update?: Prisma.UserClientRoleUpdateWithWhereUniqueWithoutUserInput | Prisma.UserClientRoleUpdateWithWhereUniqueWithoutUserInput[]
  updateMany?: Prisma.UserClientRoleUpdateManyWithWhereWithoutUserInput | Prisma.UserClientRoleUpdateManyWithWhereWithoutUserInput[]
  deleteMany?: Prisma.UserClientRoleScalarWhereInput | Prisma.UserClientRoleScalarWhereInput[]
}

export type UserClientRoleUncheckedUpdateManyWithoutAssignedByUserNestedInput = {
  create?: Prisma.XOR<Prisma.UserClientRoleCreateWithoutAssignedByUserInput, Prisma.UserClientRoleUncheckedCreateWithoutAssignedByUserInput> | Prisma.UserClientRoleCreateWithoutAssignedByUserInput[] | Prisma.UserClientRoleUncheckedCreateWithoutAssignedByUserInput[]
  connectOrCreate?: Prisma.UserClientRoleCreateOrConnectWithoutAssignedByUserInput | Prisma.UserClientRoleCreateOrConnectWithoutAssignedByUserInput[]
  upsert?: Prisma.UserClientRoleUpsertWithWhereUniqueWithoutAssignedByUserInput | Prisma.UserClientRoleUpsertWithWhereUniqueWithoutAssignedByUserInput[]
  createMany?: Prisma.UserClientRoleCreateManyAssignedByUserInputEnvelope
  set?: Prisma.UserClientRoleWhereUniqueInput | Prisma.UserClientRoleWhereUniqueInput[]
  disconnect?: Prisma.UserClientRoleWhereUniqueInput | Prisma.UserClientRoleWhereUniqueInput[]
  delete?: Prisma.UserClientRoleWhereUniqueInput | Prisma.UserClientRoleWhereUniqueInput[]
  connect?: Prisma.UserClientRoleWhereUniqueInput | Prisma.UserClientRoleWhereUniqueInput[]
  update?: Prisma.UserClientRoleUpdateWithWhereUniqueWithoutAssignedByUserInput | Prisma.UserClientRoleUpdateWithWhereUniqueWithoutAssignedByUserInput[]
  updateMany?: Prisma.UserClientRoleUpdateManyWithWhereWithoutAssignedByUserInput | Prisma.UserClientRoleUpdateManyWithWhereWithoutAssignedByUserInput[]
  deleteMany?: Prisma.UserClientRoleScalarWhereInput | Prisma.UserClientRoleScalarWhereInput[]
}

export type UserClientRoleCreateNestedManyWithoutRoleInput = {
  create?: Prisma.XOR<Prisma.UserClientRoleCreateWithoutRoleInput, Prisma.UserClientRoleUncheckedCreateWithoutRoleInput> | Prisma.UserClientRoleCreateWithoutRoleInput[] | Prisma.UserClientRoleUncheckedCreateWithoutRoleInput[]
  connectOrCreate?: Prisma.UserClientRoleCreateOrConnectWithoutRoleInput | Prisma.UserClientRoleCreateOrConnectWithoutRoleInput[]
  createMany?: Prisma.UserClientRoleCreateManyRoleInputEnvelope
  connect?: Prisma.UserClientRoleWhereUniqueInput | Prisma.UserClientRoleWhereUniqueInput[]
}

export type UserClientRoleUncheckedCreateNestedManyWithoutRoleInput = {
  create?: Prisma.XOR<Prisma.UserClientRoleCreateWithoutRoleInput, Prisma.UserClientRoleUncheckedCreateWithoutRoleInput> | Prisma.UserClientRoleCreateWithoutRoleInput[] | Prisma.UserClientRoleUncheckedCreateWithoutRoleInput[]
  connectOrCreate?: Prisma.UserClientRoleCreateOrConnectWithoutRoleInput | Prisma.UserClientRoleCreateOrConnectWithoutRoleInput[]
  createMany?: Prisma.UserClientRoleCreateManyRoleInputEnvelope
  connect?: Prisma.UserClientRoleWhereUniqueInput | Prisma.UserClientRoleWhereUniqueInput[]
}

export type UserClientRoleUpdateManyWithoutRoleNestedInput = {
  create?: Prisma.XOR<Prisma.UserClientRoleCreateWithoutRoleInput, Prisma.UserClientRoleUncheckedCreateWithoutRoleInput> | Prisma.UserClientRoleCreateWithoutRoleInput[] | Prisma.UserClientRoleUncheckedCreateWithoutRoleInput[]
  connectOrCreate?: Prisma.UserClientRoleCreateOrConnectWithoutRoleInput | Prisma.UserClientRoleCreateOrConnectWithoutRoleInput[]
  upsert?: Prisma.UserClientRoleUpsertWithWhereUniqueWithoutRoleInput | Prisma.UserClientRoleUpsertWithWhereUniqueWithoutRoleInput[]
  createMany?: Prisma.UserClientRoleCreateManyRoleInputEnvelope
  set?: Prisma.UserClientRoleWhereUniqueInput | Prisma.UserClientRoleWhereUniqueInput[]
  disconnect?: Prisma.UserClientRoleWhereUniqueInput | Prisma.UserClientRoleWhereUniqueInput[]
  delete?: Prisma.UserClientRoleWhereUniqueInput | Prisma.UserClientRoleWhereUniqueInput[]
  connect?: Prisma.UserClientRoleWhereUniqueInput | Prisma.UserClientRoleWhereUniqueInput[]
  update?: Prisma.UserClientRoleUpdateWithWhereUniqueWithoutRoleInput | Prisma.UserClientRoleUpdateWithWhereUniqueWithoutRoleInput[]
  updateMany?: Prisma.UserClientRoleUpdateManyWithWhereWithoutRoleInput | Prisma.UserClientRoleUpdateManyWithWhereWithoutRoleInput[]
  deleteMany?: Prisma.UserClientRoleScalarWhereInput | Prisma.UserClientRoleScalarWhereInput[]
}

export type UserClientRoleUncheckedUpdateManyWithoutRoleNestedInput = {
  create?: Prisma.XOR<Prisma.UserClientRoleCreateWithoutRoleInput, Prisma.UserClientRoleUncheckedCreateWithoutRoleInput> | Prisma.UserClientRoleCreateWithoutRoleInput[] | Prisma.UserClientRoleUncheckedCreateWithoutRoleInput[]
  connectOrCreate?: Prisma.UserClientRoleCreateOrConnectWithoutRoleInput | Prisma.UserClientRoleCreateOrConnectWithoutRoleInput[]
  upsert?: Prisma.UserClientRoleUpsertWithWhereUniqueWithoutRoleInput | Prisma.UserClientRoleUpsertWithWhereUniqueWithoutRoleInput[]
  createMany?: Prisma.UserClientRoleCreateManyRoleInputEnvelope
  set?: Prisma.UserClientRoleWhereUniqueInput | Prisma.UserClientRoleWhereUniqueInput[]
  disconnect?: Prisma.UserClientRoleWhereUniqueInput | Prisma.UserClientRoleWhereUniqueInput[]
  delete?: Prisma.UserClientRoleWhereUniqueInput | Prisma.UserClientRoleWhereUniqueInput[]
  connect?: Prisma.UserClientRoleWhereUniqueInput | Prisma.UserClientRoleWhereUniqueInput[]
  update?: Prisma.UserClientRoleUpdateWithWhereUniqueWithoutRoleInput | Prisma.UserClientRoleUpdateWithWhereUniqueWithoutRoleInput[]
  updateMany?: Prisma.UserClientRoleUpdateManyWithWhereWithoutRoleInput | Prisma.UserClientRoleUpdateManyWithWhereWithoutRoleInput[]
  deleteMany?: Prisma.UserClientRoleScalarWhereInput | Prisma.UserClientRoleScalarWhereInput[]
}

export type UserClientRoleCreateWithoutClientInput = {
  userClientRoleId?: string
  assignedAt?: Date | string
  user: Prisma.UserCreateNestedOneWithoutUserClientRolesInput
  role: Prisma.RoleCreateNestedOneWithoutUserClientRolesInput
  assignedByUser?: Prisma.UserCreateNestedOneWithoutAssignedUserClientRolesInput
}

export type UserClientRoleUncheckedCreateWithoutClientInput = {
  userClientRoleId?: string
  userId: string
  roleId: string
  assignedByUserId?: string | null
  assignedAt?: Date | string
}

export type UserClientRoleCreateOrConnectWithoutClientInput = {
  where: Prisma.UserClientRoleWhereUniqueInput
  create: Prisma.XOR<Prisma.UserClientRoleCreateWithoutClientInput, Prisma.UserClientRoleUncheckedCreateWithoutClientInput>
}

export type UserClientRoleCreateManyClientInputEnvelope = {
  data: Prisma.UserClientRoleCreateManyClientInput | Prisma.UserClientRoleCreateManyClientInput[]
  skipDuplicates?: boolean
}

export type UserClientRoleUpsertWithWhereUniqueWithoutClientInput = {
  where: Prisma.UserClientRoleWhereUniqueInput
  update: Prisma.XOR<Prisma.UserClientRoleUpdateWithoutClientInput, Prisma.UserClientRoleUncheckedUpdateWithoutClientInput>
  create: Prisma.XOR<Prisma.UserClientRoleCreateWithoutClientInput, Prisma.UserClientRoleUncheckedCreateWithoutClientInput>
}

export type UserClientRoleUpdateWithWhereUniqueWithoutClientInput = {
  where: Prisma.UserClientRoleWhereUniqueInput
  data: Prisma.XOR<Prisma.UserClientRoleUpdateWithoutClientInput, Prisma.UserClientRoleUncheckedUpdateWithoutClientInput>
}

export type UserClientRoleUpdateManyWithWhereWithoutClientInput = {
  where: Prisma.UserClientRoleScalarWhereInput
  data: Prisma.XOR<Prisma.UserClientRoleUpdateManyMutationInput, Prisma.UserClientRoleUncheckedUpdateManyWithoutClientInput>
}

export type UserClientRoleScalarWhereInput = {
  AND?: Prisma.UserClientRoleScalarWhereInput | Prisma.UserClientRoleScalarWhereInput[]
  OR?: Prisma.UserClientRoleScalarWhereInput[]
  NOT?: Prisma.UserClientRoleScalarWhereInput | Prisma.UserClientRoleScalarWhereInput[]
  userClientRoleId?: Prisma.UuidFilter<"UserClientRole"> | string
  userId?: Prisma.UuidFilter<"UserClientRole"> | string
  clientId?: Prisma.UuidFilter<"UserClientRole"> | string
  roleId?: Prisma.UuidFilter<"UserClientRole"> | string
  assignedByUserId?: Prisma.UuidNullableFilter<"UserClientRole"> | string | null
  assignedAt?: Prisma.DateTimeFilter<"UserClientRole"> | Date | string
}

export type UserClientRoleCreateWithoutUserInput = {
  userClientRoleId?: string
  assignedAt?: Date | string
  client: Prisma.ClientCreateNestedOneWithoutUserClientRolesInput
  role: Prisma.RoleCreateNestedOneWithoutUserClientRolesInput
  assignedByUser?: Prisma.UserCreateNestedOneWithoutAssignedUserClientRolesInput
}

export type UserClientRoleUncheckedCreateWithoutUserInput = {
  userClientRoleId?: string
  clientId: string
  roleId: string
  assignedByUserId?: string | null
  assignedAt?: Date | string
}

export type UserClientRoleCreateOrConnectWithoutUserInput = {
  where: Prisma.UserClientRoleWhereUniqueInput
  create: Prisma.XOR<Prisma.UserClientRoleCreateWithoutUserInput, Prisma.UserClientRoleUncheckedCreateWithoutUserInput>
}

export type UserClientRoleCreateManyUserInputEnvelope = {
  data: Prisma.UserClientRoleCreateManyUserInput | Prisma.UserClientRoleCreateManyUserInput[]
  skipDuplicates?: boolean
}

export type UserClientRoleCreateWithoutAssignedByUserInput = {
  userClientRoleId?: string
  assignedAt?: Date | string
  user: Prisma.UserCreateNestedOneWithoutUserClientRolesInput
  client: Prisma.ClientCreateNestedOneWithoutUserClientRolesInput
  role: Prisma.RoleCreateNestedOneWithoutUserClientRolesInput
}

export type UserClientRoleUncheckedCreateWithoutAssignedByUserInput = {
  userClientRoleId?: string
  userId: string
  clientId: string
  roleId: string
  assignedAt?: Date | string
}

export type UserClientRoleCreateOrConnectWithoutAssignedByUserInput = {
  where: Prisma.UserClientRoleWhereUniqueInput
  create: Prisma.XOR<Prisma.UserClientRoleCreateWithoutAssignedByUserInput, Prisma.UserClientRoleUncheckedCreateWithoutAssignedByUserInput>
}

export type UserClientRoleCreateManyAssignedByUserInputEnvelope = {
  data: Prisma.UserClientRoleCreateManyAssignedByUserInput | Prisma.UserClientRoleCreateManyAssignedByUserInput[]
  skipDuplicates?: boolean
}

export type UserClientRoleUpsertWithWhereUniqueWithoutUserInput = {
  where: Prisma.UserClientRoleWhereUniqueInput
  update: Prisma.XOR<Prisma.UserClientRoleUpdateWithoutUserInput, Prisma.UserClientRoleUncheckedUpdateWithoutUserInput>
  create: Prisma.XOR<Prisma.UserClientRoleCreateWithoutUserInput, Prisma.UserClientRoleUncheckedCreateWithoutUserInput>
}

export type UserClientRoleUpdateWithWhereUniqueWithoutUserInput = {
  where: Prisma.UserClientRoleWhereUniqueInput
  data: Prisma.XOR<Prisma.UserClientRoleUpdateWithoutUserInput, Prisma.UserClientRoleUncheckedUpdateWithoutUserInput>
}

export type UserClientRoleUpdateManyWithWhereWithoutUserInput = {
  where: Prisma.UserClientRoleScalarWhereInput
  data: Prisma.XOR<Prisma.UserClientRoleUpdateManyMutationInput, Prisma.UserClientRoleUncheckedUpdateManyWithoutUserInput>
}

export type UserClientRoleUpsertWithWhereUniqueWithoutAssignedByUserInput = {
  where: Prisma.UserClientRoleWhereUniqueInput
  update: Prisma.XOR<Prisma.UserClientRoleUpdateWithoutAssignedByUserInput, Prisma.UserClientRoleUncheckedUpdateWithoutAssignedByUserInput>
  create: Prisma.XOR<Prisma.UserClientRoleCreateWithoutAssignedByUserInput, Prisma.UserClientRoleUncheckedCreateWithoutAssignedByUserInput>
}

export type UserClientRoleUpdateWithWhereUniqueWithoutAssignedByUserInput = {
  where: Prisma.UserClientRoleWhereUniqueInput
  data: Prisma.XOR<Prisma.UserClientRoleUpdateWithoutAssignedByUserInput, Prisma.UserClientRoleUncheckedUpdateWithoutAssignedByUserInput>
}

export type UserClientRoleUpdateManyWithWhereWithoutAssignedByUserInput = {
  where: Prisma.UserClientRoleScalarWhereInput
  data: Prisma.XOR<Prisma.UserClientRoleUpdateManyMutationInput, Prisma.UserClientRoleUncheckedUpdateManyWithoutAssignedByUserInput>
}

export type UserClientRoleCreateWithoutRoleInput = {
  userClientRoleId?: string
  assignedAt?: Date | string
  user: Prisma.UserCreateNestedOneWithoutUserClientRolesInput
  client: Prisma.ClientCreateNestedOneWithoutUserClientRolesInput
  assignedByUser?: Prisma.UserCreateNestedOneWithoutAssignedUserClientRolesInput
}

export type UserClientRoleUncheckedCreateWithoutRoleInput = {
  userClientRoleId?: string
  userId: string
  clientId: string
  assignedByUserId?: string | null
  assignedAt?: Date | string
}

export type UserClientRoleCreateOrConnectWithoutRoleInput = {
  where: Prisma.UserClientRoleWhereUniqueInput
  create: Prisma.XOR<Prisma.UserClientRoleCreateWithoutRoleInput, Prisma.UserClientRoleUncheckedCreateWithoutRoleInput>
}

export type UserClientRoleCreateManyRoleInputEnvelope = {
  data: Prisma.UserClientRoleCreateManyRoleInput | Prisma.UserClientRoleCreateManyRoleInput[]
  skipDuplicates?: boolean
}

export type UserClientRoleUpsertWithWhereUniqueWithoutRoleInput = {
  where: Prisma.UserClientRoleWhereUniqueInput
  update: Prisma.XOR<Prisma.UserClientRoleUpdateWithoutRoleInput, Prisma.UserClientRoleUncheckedUpdateWithoutRoleInput>
  create: Prisma.XOR<Prisma.UserClientRoleCreateWithoutRoleInput, Prisma.UserClientRoleUncheckedCreateWithoutRoleInput>
}

export type UserClientRoleUpdateWithWhereUniqueWithoutRoleInput = {
  where: Prisma.UserClientRoleWhereUniqueInput
  data: Prisma.XOR<Prisma.UserClientRoleUpdateWithoutRoleInput, Prisma.UserClientRoleUncheckedUpdateWithoutRoleInput>
}

export type UserClientRoleUpdateManyWithWhereWithoutRoleInput = {
  where: Prisma.UserClientRoleScalarWhereInput
  data: Prisma.XOR<Prisma.UserClientRoleUpdateManyMutationInput, Prisma.UserClientRoleUncheckedUpdateManyWithoutRoleInput>
}

export type UserClientRoleCreateManyClientInput = {
  userClientRoleId?: string
  userId: string
  roleId: string
  assignedByUserId?: string | null
  assignedAt?: Date | string
}

export type UserClientRoleUpdateWithoutClientInput = {
  userClientRoleId?: Prisma.StringFieldUpdateOperationsInput | string
  assignedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  user?: Prisma.UserUpdateOneRequiredWithoutUserClientRolesNestedInput
  role?: Prisma.RoleUpdateOneRequiredWithoutUserClientRolesNestedInput
  assignedByUser?: Prisma.UserUpdateOneWithoutAssignedUserClientRolesNestedInput
}

export type UserClientRoleUncheckedUpdateWithoutClientInput = {
  userClientRoleId?: Prisma.StringFieldUpdateOperationsInput | string
  userId?: Prisma.StringFieldUpdateOperationsInput | string
  roleId?: Prisma.StringFieldUpdateOperationsInput | string
  assignedByUserId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  assignedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type UserClientRoleUncheckedUpdateManyWithoutClientInput = {
  userClientRoleId?: Prisma.StringFieldUpdateOperationsInput | string
  userId?: Prisma.StringFieldUpdateOperationsInput | string
  roleId?: Prisma.StringFieldUpdateOperationsInput | string
  assignedByUserId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  assignedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type UserClientRoleCreateManyUserInput = {
  userClientRoleId?: string
  clientId: string
  roleId: string
  assignedByUserId?: string | null
  assignedAt?: Date | string
}

export type UserClientRoleCreateManyAssignedByUserInput = {
  userClientRoleId?: string
  userId: string
  clientId: string
  roleId: string
  assignedAt?: Date | string
}

export type UserClientRoleUpdateWithoutUserInput = {
  userClientRoleId?: Prisma.StringFieldUpdateOperationsInput | string
  assignedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  client?: Prisma.ClientUpdateOneRequiredWithoutUserClientRolesNestedInput
  role?: Prisma.RoleUpdateOneRequiredWithoutUserClientRolesNestedInput
  assignedByUser?: Prisma.UserUpdateOneWithoutAssignedUserClientRolesNestedInput
}

export type UserClientRoleUncheckedUpdateWithoutUserInput = {
  userClientRoleId?: Prisma.StringFieldUpdateOperationsInput | string
  clientId?: Prisma.StringFieldUpdateOperationsInput | string
  roleId?: Prisma.StringFieldUpdateOperationsInput | string
  assignedByUserId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  assignedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type UserClientRoleUncheckedUpdateManyWithoutUserInput = {
  userClientRoleId?: Prisma.StringFieldUpdateOperationsInput | string
  clientId?: Prisma.StringFieldUpdateOperationsInput | string
  roleId?: Prisma.StringFieldUpdateOperationsInput | string
  assignedByUserId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  assignedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type UserClientRoleUpdateWithoutAssignedByUserInput = {
  userClientRoleId?: Prisma.StringFieldUpdateOperationsInput | string
  assignedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  user?: Prisma.UserUpdateOneRequiredWithoutUserClientRolesNestedInput
  client?: Prisma.ClientUpdateOneRequiredWithoutUserClientRolesNestedInput
  role?: Prisma.RoleUpdateOneRequiredWithoutUserClientRolesNestedInput
}

export type UserClientRoleUncheckedUpdateWithoutAssignedByUserInput = {
  userClientRoleId?: Prisma.StringFieldUpdateOperationsInput | string
  userId?: Prisma.StringFieldUpdateOperationsInput | string
  clientId?: Prisma.StringFieldUpdateOperationsInput | string
  roleId?: Prisma.StringFieldUpdateOperationsInput | string
  assignedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type UserClientRoleUncheckedUpdateManyWithoutAssignedByUserInput = {
  userClientRoleId?: Prisma.StringFieldUpdateOperationsInput | string
  userId?: Prisma.StringFieldUpdateOperationsInput | string
  clientId?: Prisma.StringFieldUpdateOperationsInput | string
  roleId?: Prisma.StringFieldUpdateOperationsInput | string
  assignedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type UserClientRoleCreateManyRoleInput = {
  userClientRoleId?: string
  userId: string
  clientId: string
  assignedByUserId?: string | null
  assignedAt?: Date | string
}

export type UserClientRoleUpdateWithoutRoleInput = {
  userClientRoleId?: Prisma.StringFieldUpdateOperationsInput | string
  assignedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  user?: Prisma.UserUpdateOneRequiredWithoutUserClientRolesNestedInput
  client?: Prisma.ClientUpdateOneRequiredWithoutUserClientRolesNestedInput
  assignedByUser?: Prisma.UserUpdateOneWithoutAssignedUserClientRolesNestedInput
}

export type UserClientRoleUncheckedUpdateWithoutRoleInput = {
  userClientRoleId?: Prisma.StringFieldUpdateOperationsInput | string
  userId?: Prisma.StringFieldUpdateOperationsInput | string
  clientId?: Prisma.StringFieldUpdateOperationsInput | string
  assignedByUserId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  assignedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type UserClientRoleUncheckedUpdateManyWithoutRoleInput = {
  userClientRoleId?: Prisma.StringFieldUpdateOperationsInput | string
  userId?: Prisma.StringFieldUpdateOperationsInput | string
  clientId?: Prisma.StringFieldUpdateOperationsInput | string
  assignedByUserId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  assignedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}



export type UserClientRoleSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  userClientRoleId?: boolean
  userId?: boolean
  clientId?: boolean
  roleId?: boolean
  assignedByUserId?: boolean
  assignedAt?: boolean
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
  client?: boolean | Prisma.ClientDefaultArgs<ExtArgs>
  role?: boolean | Prisma.RoleDefaultArgs<ExtArgs>
  assignedByUser?: boolean | Prisma.UserClientRole$assignedByUserArgs<ExtArgs>
}, ExtArgs["result"]["userClientRole"]>

export type UserClientRoleSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  userClientRoleId?: boolean
  userId?: boolean
  clientId?: boolean
  roleId?: boolean
  assignedByUserId?: boolean
  assignedAt?: boolean
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
  client?: boolean | Prisma.ClientDefaultArgs<ExtArgs>
  role?: boolean | Prisma.RoleDefaultArgs<ExtArgs>
  assignedByUser?: boolean | Prisma.UserClientRole$assignedByUserArgs<ExtArgs>
}, ExtArgs["result"]["userClientRole"]>

export type UserClientRoleSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  userClientRoleId?: boolean
  userId?: boolean
  clientId?: boolean
  roleId?: boolean
  assignedByUserId?: boolean
  assignedAt?: boolean
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
  client?: boolean | Prisma.ClientDefaultArgs<ExtArgs>
  role?: boolean | Prisma.RoleDefaultArgs<ExtArgs>
  assignedByUser?: boolean | Prisma.UserClientRole$assignedByUserArgs<ExtArgs>
}, ExtArgs["result"]["userClientRole"]>

export type UserClientRoleSelectScalar = {
  userClientRoleId?: boolean
  userId?: boolean
  clientId?: boolean
  roleId?: boolean
  assignedByUserId?: boolean
  assignedAt?: boolean
}

export type UserClientRoleOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"userClientRoleId" | "userId" | "clientId" | "roleId" | "assignedByUserId" | "assignedAt", ExtArgs["result"]["userClientRole"]>
export type UserClientRoleInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
  client?: boolean | Prisma.ClientDefaultArgs<ExtArgs>
  role?: boolean | Prisma.RoleDefaultArgs<ExtArgs>
  assignedByUser?: boolean | Prisma.UserClientRole$assignedByUserArgs<ExtArgs>
}
export type UserClientRoleIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
  client?: boolean | Prisma.ClientDefaultArgs<ExtArgs>
  role?: boolean | Prisma.RoleDefaultArgs<ExtArgs>
  assignedByUser?: boolean | Prisma.UserClientRole$assignedByUserArgs<ExtArgs>
}
export type UserClientRoleIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
  client?: boolean | Prisma.ClientDefaultArgs<ExtArgs>
  role?: boolean | Prisma.RoleDefaultArgs<ExtArgs>
  assignedByUser?: boolean | Prisma.UserClientRole$assignedByUserArgs<ExtArgs>
}

export type $UserClientRolePayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "UserClientRole"
  objects: {
    user: Prisma.$UserPayload<ExtArgs>
    client: Prisma.$ClientPayload<ExtArgs>
    role: Prisma.$RolePayload<ExtArgs>
    assignedByUser: Prisma.$UserPayload<ExtArgs> | null
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    userClientRoleId: string
    userId: string
    clientId: string
    roleId: string
    assignedByUserId: string | null
    assignedAt: Date
  }, ExtArgs["result"]["userClientRole"]>
  composites: {}
}

export type UserClientRoleGetPayload<S extends boolean | null | undefined | UserClientRoleDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$UserClientRolePayload, S>

export type UserClientRoleCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<UserClientRoleFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: UserClientRoleCountAggregateInputType | true
  }

export interface UserClientRoleDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['UserClientRole'], meta: { name: 'UserClientRole' } }
  /**
   * Find zero or one UserClientRole that matches the filter.
   * @param {UserClientRoleFindUniqueArgs} args - Arguments to find a UserClientRole
   * @example
   * // Get one UserClientRole
   * const userClientRole = await prisma.userClientRole.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends UserClientRoleFindUniqueArgs>(args: Prisma.SelectSubset<T, UserClientRoleFindUniqueArgs<ExtArgs>>): Prisma.Prisma__UserClientRoleClient<runtime.Types.Result.GetResult<Prisma.$UserClientRolePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one UserClientRole that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {UserClientRoleFindUniqueOrThrowArgs} args - Arguments to find a UserClientRole
   * @example
   * // Get one UserClientRole
   * const userClientRole = await prisma.userClientRole.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends UserClientRoleFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, UserClientRoleFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__UserClientRoleClient<runtime.Types.Result.GetResult<Prisma.$UserClientRolePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first UserClientRole that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UserClientRoleFindFirstArgs} args - Arguments to find a UserClientRole
   * @example
   * // Get one UserClientRole
   * const userClientRole = await prisma.userClientRole.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends UserClientRoleFindFirstArgs>(args?: Prisma.SelectSubset<T, UserClientRoleFindFirstArgs<ExtArgs>>): Prisma.Prisma__UserClientRoleClient<runtime.Types.Result.GetResult<Prisma.$UserClientRolePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first UserClientRole that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UserClientRoleFindFirstOrThrowArgs} args - Arguments to find a UserClientRole
   * @example
   * // Get one UserClientRole
   * const userClientRole = await prisma.userClientRole.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends UserClientRoleFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, UserClientRoleFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__UserClientRoleClient<runtime.Types.Result.GetResult<Prisma.$UserClientRolePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more UserClientRoles that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UserClientRoleFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all UserClientRoles
   * const userClientRoles = await prisma.userClientRole.findMany()
   * 
   * // Get first 10 UserClientRoles
   * const userClientRoles = await prisma.userClientRole.findMany({ take: 10 })
   * 
   * // Only select the `userClientRoleId`
   * const userClientRoleWithUserClientRoleIdOnly = await prisma.userClientRole.findMany({ select: { userClientRoleId: true } })
   * 
   */
  findMany<T extends UserClientRoleFindManyArgs>(args?: Prisma.SelectSubset<T, UserClientRoleFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$UserClientRolePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a UserClientRole.
   * @param {UserClientRoleCreateArgs} args - Arguments to create a UserClientRole.
   * @example
   * // Create one UserClientRole
   * const UserClientRole = await prisma.userClientRole.create({
   *   data: {
   *     // ... data to create a UserClientRole
   *   }
   * })
   * 
   */
  create<T extends UserClientRoleCreateArgs>(args: Prisma.SelectSubset<T, UserClientRoleCreateArgs<ExtArgs>>): Prisma.Prisma__UserClientRoleClient<runtime.Types.Result.GetResult<Prisma.$UserClientRolePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many UserClientRoles.
   * @param {UserClientRoleCreateManyArgs} args - Arguments to create many UserClientRoles.
   * @example
   * // Create many UserClientRoles
   * const userClientRole = await prisma.userClientRole.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends UserClientRoleCreateManyArgs>(args?: Prisma.SelectSubset<T, UserClientRoleCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many UserClientRoles and returns the data saved in the database.
   * @param {UserClientRoleCreateManyAndReturnArgs} args - Arguments to create many UserClientRoles.
   * @example
   * // Create many UserClientRoles
   * const userClientRole = await prisma.userClientRole.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many UserClientRoles and only return the `userClientRoleId`
   * const userClientRoleWithUserClientRoleIdOnly = await prisma.userClientRole.createManyAndReturn({
   *   select: { userClientRoleId: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends UserClientRoleCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, UserClientRoleCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$UserClientRolePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a UserClientRole.
   * @param {UserClientRoleDeleteArgs} args - Arguments to delete one UserClientRole.
   * @example
   * // Delete one UserClientRole
   * const UserClientRole = await prisma.userClientRole.delete({
   *   where: {
   *     // ... filter to delete one UserClientRole
   *   }
   * })
   * 
   */
  delete<T extends UserClientRoleDeleteArgs>(args: Prisma.SelectSubset<T, UserClientRoleDeleteArgs<ExtArgs>>): Prisma.Prisma__UserClientRoleClient<runtime.Types.Result.GetResult<Prisma.$UserClientRolePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one UserClientRole.
   * @param {UserClientRoleUpdateArgs} args - Arguments to update one UserClientRole.
   * @example
   * // Update one UserClientRole
   * const userClientRole = await prisma.userClientRole.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends UserClientRoleUpdateArgs>(args: Prisma.SelectSubset<T, UserClientRoleUpdateArgs<ExtArgs>>): Prisma.Prisma__UserClientRoleClient<runtime.Types.Result.GetResult<Prisma.$UserClientRolePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more UserClientRoles.
   * @param {UserClientRoleDeleteManyArgs} args - Arguments to filter UserClientRoles to delete.
   * @example
   * // Delete a few UserClientRoles
   * const { count } = await prisma.userClientRole.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends UserClientRoleDeleteManyArgs>(args?: Prisma.SelectSubset<T, UserClientRoleDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more UserClientRoles.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UserClientRoleUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many UserClientRoles
   * const userClientRole = await prisma.userClientRole.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends UserClientRoleUpdateManyArgs>(args: Prisma.SelectSubset<T, UserClientRoleUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more UserClientRoles and returns the data updated in the database.
   * @param {UserClientRoleUpdateManyAndReturnArgs} args - Arguments to update many UserClientRoles.
   * @example
   * // Update many UserClientRoles
   * const userClientRole = await prisma.userClientRole.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more UserClientRoles and only return the `userClientRoleId`
   * const userClientRoleWithUserClientRoleIdOnly = await prisma.userClientRole.updateManyAndReturn({
   *   select: { userClientRoleId: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends UserClientRoleUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, UserClientRoleUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$UserClientRolePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one UserClientRole.
   * @param {UserClientRoleUpsertArgs} args - Arguments to update or create a UserClientRole.
   * @example
   * // Update or create a UserClientRole
   * const userClientRole = await prisma.userClientRole.upsert({
   *   create: {
   *     // ... data to create a UserClientRole
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the UserClientRole we want to update
   *   }
   * })
   */
  upsert<T extends UserClientRoleUpsertArgs>(args: Prisma.SelectSubset<T, UserClientRoleUpsertArgs<ExtArgs>>): Prisma.Prisma__UserClientRoleClient<runtime.Types.Result.GetResult<Prisma.$UserClientRolePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of UserClientRoles.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UserClientRoleCountArgs} args - Arguments to filter UserClientRoles to count.
   * @example
   * // Count the number of UserClientRoles
   * const count = await prisma.userClientRole.count({
   *   where: {
   *     // ... the filter for the UserClientRoles we want to count
   *   }
   * })
  **/
  count<T extends UserClientRoleCountArgs>(
    args?: Prisma.Subset<T, UserClientRoleCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], UserClientRoleCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a UserClientRole.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UserClientRoleAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends UserClientRoleAggregateArgs>(args: Prisma.Subset<T, UserClientRoleAggregateArgs>): Prisma.PrismaPromise<GetUserClientRoleAggregateType<T>>

  /**
   * Group by UserClientRole.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UserClientRoleGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends UserClientRoleGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: UserClientRoleGroupByArgs['orderBy'] }
      : { orderBy?: UserClientRoleGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, UserClientRoleGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserClientRoleGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the UserClientRole model
 */
readonly fields: UserClientRoleFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for UserClientRole.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__UserClientRoleClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  user<T extends Prisma.UserDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.UserDefaultArgs<ExtArgs>>): Prisma.Prisma__UserClient<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  client<T extends Prisma.ClientDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.ClientDefaultArgs<ExtArgs>>): Prisma.Prisma__ClientClient<runtime.Types.Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  role<T extends Prisma.RoleDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.RoleDefaultArgs<ExtArgs>>): Prisma.Prisma__RoleClient<runtime.Types.Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  assignedByUser<T extends Prisma.UserClientRole$assignedByUserArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.UserClientRole$assignedByUserArgs<ExtArgs>>): Prisma.Prisma__UserClient<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the UserClientRole model
 */
export interface UserClientRoleFieldRefs {
  readonly userClientRoleId: Prisma.FieldRef<"UserClientRole", 'String'>
  readonly userId: Prisma.FieldRef<"UserClientRole", 'String'>
  readonly clientId: Prisma.FieldRef<"UserClientRole", 'String'>
  readonly roleId: Prisma.FieldRef<"UserClientRole", 'String'>
  readonly assignedByUserId: Prisma.FieldRef<"UserClientRole", 'String'>
  readonly assignedAt: Prisma.FieldRef<"UserClientRole", 'DateTime'>
}
    

// Custom InputTypes
/**
 * UserClientRole findUnique
 */
export type UserClientRoleFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the UserClientRole
   */
  select?: Prisma.UserClientRoleSelect<ExtArgs> | null
  /**
   * Omit specific fields from the UserClientRole
   */
  omit?: Prisma.UserClientRoleOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserClientRoleInclude<ExtArgs> | null
  /**
   * Filter, which UserClientRole to fetch.
   */
  where: Prisma.UserClientRoleWhereUniqueInput
}

/**
 * UserClientRole findUniqueOrThrow
 */
export type UserClientRoleFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the UserClientRole
   */
  select?: Prisma.UserClientRoleSelect<ExtArgs> | null
  /**
   * Omit specific fields from the UserClientRole
   */
  omit?: Prisma.UserClientRoleOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserClientRoleInclude<ExtArgs> | null
  /**
   * Filter, which UserClientRole to fetch.
   */
  where: Prisma.UserClientRoleWhereUniqueInput
}

/**
 * UserClientRole findFirst
 */
export type UserClientRoleFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the UserClientRole
   */
  select?: Prisma.UserClientRoleSelect<ExtArgs> | null
  /**
   * Omit specific fields from the UserClientRole
   */
  omit?: Prisma.UserClientRoleOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserClientRoleInclude<ExtArgs> | null
  /**
   * Filter, which UserClientRole to fetch.
   */
  where?: Prisma.UserClientRoleWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of UserClientRoles to fetch.
   */
  orderBy?: Prisma.UserClientRoleOrderByWithRelationInput | Prisma.UserClientRoleOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for UserClientRoles.
   */
  cursor?: Prisma.UserClientRoleWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` UserClientRoles from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` UserClientRoles.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of UserClientRoles.
   */
  distinct?: Prisma.UserClientRoleScalarFieldEnum | Prisma.UserClientRoleScalarFieldEnum[]
}

/**
 * UserClientRole findFirstOrThrow
 */
export type UserClientRoleFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the UserClientRole
   */
  select?: Prisma.UserClientRoleSelect<ExtArgs> | null
  /**
   * Omit specific fields from the UserClientRole
   */
  omit?: Prisma.UserClientRoleOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserClientRoleInclude<ExtArgs> | null
  /**
   * Filter, which UserClientRole to fetch.
   */
  where?: Prisma.UserClientRoleWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of UserClientRoles to fetch.
   */
  orderBy?: Prisma.UserClientRoleOrderByWithRelationInput | Prisma.UserClientRoleOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for UserClientRoles.
   */
  cursor?: Prisma.UserClientRoleWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` UserClientRoles from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` UserClientRoles.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of UserClientRoles.
   */
  distinct?: Prisma.UserClientRoleScalarFieldEnum | Prisma.UserClientRoleScalarFieldEnum[]
}

/**
 * UserClientRole findMany
 */
export type UserClientRoleFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the UserClientRole
   */
  select?: Prisma.UserClientRoleSelect<ExtArgs> | null
  /**
   * Omit specific fields from the UserClientRole
   */
  omit?: Prisma.UserClientRoleOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserClientRoleInclude<ExtArgs> | null
  /**
   * Filter, which UserClientRoles to fetch.
   */
  where?: Prisma.UserClientRoleWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of UserClientRoles to fetch.
   */
  orderBy?: Prisma.UserClientRoleOrderByWithRelationInput | Prisma.UserClientRoleOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing UserClientRoles.
   */
  cursor?: Prisma.UserClientRoleWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` UserClientRoles from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` UserClientRoles.
   */
  skip?: number
  distinct?: Prisma.UserClientRoleScalarFieldEnum | Prisma.UserClientRoleScalarFieldEnum[]
}

/**
 * UserClientRole create
 */
export type UserClientRoleCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the UserClientRole
   */
  select?: Prisma.UserClientRoleSelect<ExtArgs> | null
  /**
   * Omit specific fields from the UserClientRole
   */
  omit?: Prisma.UserClientRoleOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserClientRoleInclude<ExtArgs> | null
  /**
   * The data needed to create a UserClientRole.
   */
  data: Prisma.XOR<Prisma.UserClientRoleCreateInput, Prisma.UserClientRoleUncheckedCreateInput>
}

/**
 * UserClientRole createMany
 */
export type UserClientRoleCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many UserClientRoles.
   */
  data: Prisma.UserClientRoleCreateManyInput | Prisma.UserClientRoleCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * UserClientRole createManyAndReturn
 */
export type UserClientRoleCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the UserClientRole
   */
  select?: Prisma.UserClientRoleSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the UserClientRole
   */
  omit?: Prisma.UserClientRoleOmit<ExtArgs> | null
  /**
   * The data used to create many UserClientRoles.
   */
  data: Prisma.UserClientRoleCreateManyInput | Prisma.UserClientRoleCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserClientRoleIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * UserClientRole update
 */
export type UserClientRoleUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the UserClientRole
   */
  select?: Prisma.UserClientRoleSelect<ExtArgs> | null
  /**
   * Omit specific fields from the UserClientRole
   */
  omit?: Prisma.UserClientRoleOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserClientRoleInclude<ExtArgs> | null
  /**
   * The data needed to update a UserClientRole.
   */
  data: Prisma.XOR<Prisma.UserClientRoleUpdateInput, Prisma.UserClientRoleUncheckedUpdateInput>
  /**
   * Choose, which UserClientRole to update.
   */
  where: Prisma.UserClientRoleWhereUniqueInput
}

/**
 * UserClientRole updateMany
 */
export type UserClientRoleUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update UserClientRoles.
   */
  data: Prisma.XOR<Prisma.UserClientRoleUpdateManyMutationInput, Prisma.UserClientRoleUncheckedUpdateManyInput>
  /**
   * Filter which UserClientRoles to update
   */
  where?: Prisma.UserClientRoleWhereInput
  /**
   * Limit how many UserClientRoles to update.
   */
  limit?: number
}

/**
 * UserClientRole updateManyAndReturn
 */
export type UserClientRoleUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the UserClientRole
   */
  select?: Prisma.UserClientRoleSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the UserClientRole
   */
  omit?: Prisma.UserClientRoleOmit<ExtArgs> | null
  /**
   * The data used to update UserClientRoles.
   */
  data: Prisma.XOR<Prisma.UserClientRoleUpdateManyMutationInput, Prisma.UserClientRoleUncheckedUpdateManyInput>
  /**
   * Filter which UserClientRoles to update
   */
  where?: Prisma.UserClientRoleWhereInput
  /**
   * Limit how many UserClientRoles to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserClientRoleIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * UserClientRole upsert
 */
export type UserClientRoleUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the UserClientRole
   */
  select?: Prisma.UserClientRoleSelect<ExtArgs> | null
  /**
   * Omit specific fields from the UserClientRole
   */
  omit?: Prisma.UserClientRoleOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserClientRoleInclude<ExtArgs> | null
  /**
   * The filter to search for the UserClientRole to update in case it exists.
   */
  where: Prisma.UserClientRoleWhereUniqueInput
  /**
   * In case the UserClientRole found by the `where` argument doesn't exist, create a new UserClientRole with this data.
   */
  create: Prisma.XOR<Prisma.UserClientRoleCreateInput, Prisma.UserClientRoleUncheckedCreateInput>
  /**
   * In case the UserClientRole was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.UserClientRoleUpdateInput, Prisma.UserClientRoleUncheckedUpdateInput>
}

/**
 * UserClientRole delete
 */
export type UserClientRoleDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the UserClientRole
   */
  select?: Prisma.UserClientRoleSelect<ExtArgs> | null
  /**
   * Omit specific fields from the UserClientRole
   */
  omit?: Prisma.UserClientRoleOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserClientRoleInclude<ExtArgs> | null
  /**
   * Filter which UserClientRole to delete.
   */
  where: Prisma.UserClientRoleWhereUniqueInput
}

/**
 * UserClientRole deleteMany
 */
export type UserClientRoleDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which UserClientRoles to delete
   */
  where?: Prisma.UserClientRoleWhereInput
  /**
   * Limit how many UserClientRoles to delete.
   */
  limit?: number
}

/**
 * UserClientRole.assignedByUser
 */
export type UserClientRole$assignedByUserArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null
  where?: Prisma.UserWhereInput
}

/**
 * UserClientRole without action
 */
export type UserClientRoleDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the UserClientRole
   */
  select?: Prisma.UserClientRoleSelect<ExtArgs> | null
  /**
   * Omit specific fields from the UserClientRole
   */
  omit?: Prisma.UserClientRoleOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserClientRoleInclude<ExtArgs> | null
}
